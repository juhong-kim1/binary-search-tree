복습==========================================

힙 자료구조는

완전이진트리 구조

완전이진트리는 마지막 레벨 제외하고 전부 노드로 차있는 구조, 마지막 레벨도 왼쪽부터 차있음


완전이진트리이기 때문에 배열로 구현

제일 끝에서만 삽입삭제 하기때문에 성능 좋아짐


최소 힙

부모노드의 값(우선순위?)이 자식노드보다 작음



그래프 자료구조

상태머신 같은게 그래프자료구조라고 생각하면 됨

정점 (노드와 동의어)
간선 (노드를 잇는 선)

배열로도 표현가능하고 인접리스트로 표현도 가능

종류

무방향성 그래프 - 간선에 방향이 없어서 어디로든 이동 가능

방향성 그래프 - 방향대로 가야함


사이클이 성립하면 그래프임, 그때부터 트리가 아니게 됨


그래프 탐색 알고리즘

깊이 우선 탐색(DFS) - 스택과 재귀함수로 구현 가능, 스택으로 하는 이유는 가장 마지막에 방문한 정점부터 탐색을 이어가기 때문

너비 우선 탐색(BFS) - 가까운 정점부터 차례대로 탐색하기 때문에 선입선출 구조인 큐를 사용


너비 우선 탐색으로 길찾기 가능 (가중치 있으면 안됨)


다익스트라 알고리즘 - 가중치 있는 그래프의 길찾기 가능, 코드는 BFS와 유사

모든 정점에 대한 배열, 딕셔너리를 생성

큐에다 넣는게 아니고 우선순위 큐에넣음


우선순위 큐에 가중치를 더한 값을 우선순위로 넣어줌




A* 알고리즘 - 2D에서 길찾기 알고리즘 표준

일반적으로 다익스트라 알고리즘보다 효율성이 좋음 (목표 정점까지의 최적화)

목표노드까지의 예상되는 비용을 계산해서 큐에넣음

휴리스틱 함수가 쓰임(목적지 경로를 계산하는 함수)


스코어 - 휴리스틱함수로 계산한 값 + 거리

파일 2d게임씬을 열자


마우스로 눌렀을 때 이동할 수 있는 경로가 있다면 


맵이 랜덤으로 생성 되는데, 생성 조건을 걸어줘야함





맵에 성 스프라이트를 하나만 생성 할거임

마을인 애들중에 한놈을 뽑아서 성으로 교체

플레이어와 경로부터 갈수 있는곳에 성이 있어야함



해안, 섬은 못가는타입

숲, 언덕은 가중치가 조금 다름

스크립트에는 각 타일들에 인덱스랑 특정한 타일의 월드좌표 포지션같은게 있음




1. 스페이스 클릭
2. 리셋 스테이지 함수에서 맵 기본 생성, 크리에잇 아일랜드 함수로 오브젝트 배치, 성공하면 true return함

- 여기서 이제 길찾기 알고리즘 적용해서 플레이어부터 성까지 갈 수 있는 경로가 있다면 true 반환, 없으면 false 반환해서 다시 만들게함



플레이어 이동경로

search.tiles에 경로가 저장됨

1번타일 , 2번타일 이런순으로 이동시키면 될거같은데





1. 이동할 곳을 찍으면 최적경로가 나온다.

2. 첫번째로 이동할 타일의 정보를 받는다.

3. 그 타일으로 이동시킨다.

4. 이동이 끝났다면 다음 타일의 정보를 받아 그 타일로 이동시킨다.

5. 이동완료


타일맵 8방향 이동때 쓸 수있는 휴리스틱 함수가있음












